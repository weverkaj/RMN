library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(devtools)
document()
library(RMN)
f = load("data/CAPlantsv2.RData")
f = as.data.frame(load("data/CAPlantsv2.RData"))
View(CAPlantsv2)
CAPlantsv2 = read.csv("R/CAPlantsv2.csv")
Invasivesv1 = read.csv("R/Invasivesv1.csv")
devtools::use_data(CAPlantsv2, internal = TRUE)
devtools::use_data(Invasivesv1, internal = TRUE)
load("~/Point Blue 2019/RMN/R/sysdata.rda")
devtools::use_data(CAPlantsv2, Invasivesv1, internal = TRUE, overwrite = TRUE)
usethis::use_data(CAPlantsv2, Invasivesv1, internal = TRUE, overwrite = TRUE)
library(RMN)
load("~/Point Blue 2019/RMN/R/sysdata.rda")
document()
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(devtools)
document()
library(RMN)
devtools::document()
library(RMN)
library(RMN)
library(devtools)
document()
library(RMN)
library(devtools)
document()
library(RMN)
library(RMN)
library(devtools)
document()
document()
library(RMN)
document()
library(RMN)
library(ggplot2)
?scale_fill_brewer
document()
library(RMN)
?species.cover.table
library(RMN)
library(RMN)
library(RMN)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
lpi<-read.csv("SJVLPI.csv") %>% add.pointyear()
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(reshape2)
library(ggplot2)
library(knitr)
library(plyr)
library(RMN)
library(lubridate)
library(dplyr)
lpi<-read.csv("SJVLPI.csv") %>% add.pointyear()
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
document()
devtools::document()
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(shiny)
?font
?box
?renderText
library(RMN)
library(RMN)
library(RMN)
devtools::document()
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
?grid.table
library(gridExtra)
?ttheme_default
library(dplyr)
?melt
library(RMN)
library(RMN)
library(RMN)
library(RMN)
"(anthony,2019)"
f = "(anthony,2019)"
f[1:10]
library(RMN)
library(RMN)
library(dplyr)
?filter
library(RMN)
library(RMN)
library(RMN)
levels(lpi$year)
levels(as.factor(lpi$year))
library(RMN)
library(RMN)
devtools::document()
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
?diff
?aggregate
library(RMN)
grid.arrange
library(RMN)
View(soil)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(ggplot2)
?scale_fill_manual
"YlGnBu"
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
library(RMN)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(reshape2)
library(ggplot2)
library(knitr)
library(plyr)
library(RMN)
library(lubridate)
library(dplyr)
# Set your working directory. This is the pathway to the file where you keep your downloaded data.
# All products get written to this as well.
# I recommend 1 folder per ranch
# Replace the filepath in quotes with your filepath
# Remember to change the backslashes ("\") to forward slashes ("/")
# Read in Veg data
# Replace the filename in quotes with whatever you named the file
name = "TOKA"
main<-read.csv("smc_main.csv") %>% add.pointyear() %>% subset(Transect.Name == name)
lpi<-read.csv("smc_lpi.csv") %>% add.pointyear() %>% subset(subset = (Soil.Surface != "" & Top.Layer != "")) %>% subset(Transect.Name == name)
checklist<-read.csv("smc_check.csv") %>% add.pointyear() %>% subset(Transect.Name == name)
# Read in the California Plants list and Invasivs.
##These are files you should have gotten from Libby.
##Bug her if you didn't
cover.sum.plot(lpi, checklist)
cs = function(lpi, checklist, surveyyear = c(levels(as.factor(lpi$year)), levels(as.factor(checklist$year))),
choose.variable = c("SpeciesRichness", "Litter", "Thatch",
"BareGround", "Trees", "Shrubs")){
library(reshape2)
library(ggplot2)
checklist = subset(checklist, year %in% surveyyear)
lpi = subset(lpi, year %in% surveyyear)
covsum<- ddply(checklist, .(Vegetation.Type, pointyear), summarise, Percent.Cover=sum(Percent.Cover), .drop=F)
shrubs<-subset(covsum, subset=covsum$Vegetation.Type == "shrubs")
colnames(shrubs) = c("covertype", "pointyear", "Shrubcover")
shrubs = subset(shrubs, select = c("pointyear", "Shrubcover"))
trees<-subset(covsum, subset=covsum$Vegetation.Type == "trees")
colnames(trees) = c("covertype", "pointyear", "Treecover")
trees = subset(trees, select = c("pointyear", "Treecover"))
lpi$BG<-0
lpi$BG <- replace(lpi$BG,
lpi$Top.Layer == "NOPLANT" &
lpi$Lower1 == "" & lpi$Lower2 == "" & lpi$Lower3 == "" & lpi$Soil.Surface == "S", 1)
#Aggregate Bare Grounds By Point
BareGround<-aggregate(lpi$BG,list(lpi$pointyear),sum)
names(BareGround)<-c("pointyear", "BareGround")
#Calculate Litter
#First, rename all of the things that could be litter into just one term
lpi$Litter<-0
lpi$Litter <- replace(lpi$Litter, lpi$Lower1 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower2 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower3 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower4 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower5 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower6 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower7 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower8 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower9 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower10 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Soil.Surface == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Soil.Surface == "EM", 1)
Litter<-aggregate(lpi$Litter,list(lpi$pointyear),sum)
names(Litter)<-c("pointyear", "Litter")
lpi$Thatch<-1
lpi$Thatch<-replace(lpi$Thatch, is.na(lpi$Thatch.Indices.Lower), 0)
lpi$Thatch<-replace(lpi$Thatch, lpi$Thatch.Indices.Lower == "", 0)
lpi$Thatch<-replace(lpi$Thatch, is.na(lpi$Thatch.Top.Layer), 0)
lpi$Thatch<-replace(lpi$Thatch, lpi$Thatch.Top.Layer == "", 0)
Thatch<-aggregate(lpi$Thatch,list(lpi$pointyear),sum, na.rm = TRUE)
names(Thatch)<-c("pointyear", "Thatch")
lpi$Point.Dir<-paste(lpi$pointyear, lpi$Direction, sep="-")
layers<-subset(lpi, select=c("pointyear",  "Top.Layer", "Lower1", "Lower2",
"Lower3", "Lower4", "Lower5", "Lower6", "Lower7"))
longlpi<-melt(layers, id="pointyear")
names(longlpi)<-c("pointyear", "Layer", "Spp")
checklist$Layer<-"extras"
extras<-subset(checklist, select=c("pointyear", "Layer", "USDA.Code"))
names(extras)<-c("pointyear", "Layer", "Spp")
both<-rbind(longlpi, extras)
both$Spp<-as.factor(both$Spp)
#Remove the non-spp
Exclude<-c("", "2FA", "2FORB", "2FP", "2GA", "2GP", "2LICHN",
"2LTR", "2LTRWS",  "2PLANT",  "2W", "NOPLANT", "L", "WL")
both <- both[!(both$Spp %in% Exclude),]
both<-droplevels(both)
##add plants that are in the soil surface hit to this that##
CAPlants = RMN:::CAPlantsv2
richness<-NULL
both1 = both
both1$Layer = NULL
both1 = both1[!duplicated(both1),]
richness = both1
richness<-merge(richness, CAPlants, by.x = "Spp", by.y = "Accepted.Symbol", all.x = TRUE, all.y = FALSE)
richness2<-aggregate(richness$Spp, list(richness$pointyear), length)
names(richness2)<-c("pointyear", "NumSpp")
#### Now bring everything together
Pointyears = subset(main, select = c(pointyear, PointId, year))
data.summary = Pointyears
data.summary = merge(data.summary, richness2, by = "pointyear", all.x=TRUE)
data.summary<-merge(data.summary, Litter, by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, Thatch,by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, BareGround,by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, trees,by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, shrubs,by="pointyear", all.x=TRUE)
# IF you have transect where Not every point has all 100 subsamples,
# Then run this to correct for reduced effort
lpi$Tally<-1
indices<-aggregate(lpi$Tally, list(lpi$pointyear), sum)
names(indices)<-c("pointyear", "NumIndices")
data.summary<-merge(data.summary, indices, by="pointyear")
data.summary$Litter<-(data.summary$Litter/data.summary$NumIndices)*100
data.summary$BareGround<-(data.summary$BareGround/data.summary$NumIndices)*100
data.summary$Thatch = (data.summary$Thatch/data.summary$NumIndices)*100
#select variables you want to
if(!("SpeciesRichness" %in% choose.variable)){data.summary$NumSpp = NULL}
if(!("Litter" %in% choose.variable)){data.summary$Litter = NULL}
if(!("Thatch" %in% choose.variable)){data.summary$Thatch = NULL}
if(!("BareGround" %in% choose.variable)){data.summary$BareGround = NULL}
if(!("Trees" %in% choose.variable)){data.summary$Treecover = NULL}
if(!("Shrubs" %in% choose.variable)){data.summary$Shrubcover = NULL}
return(data.summary)
}
cs(lpi, checklist)
f = cs(lpi, checklist)
View(f)
cs = function(lpi, checklist, surveyyear = c(levels(as.factor(lpi$year)), levels(as.factor(checklist$year))),
choose.variable = c("SpeciesRichness", "Litter", "Thatch",
"BareGround", "Trees", "Shrubs")){
library(reshape2)
library(ggplot2)
checklist = subset(checklist, year %in% surveyyear)
lpi = subset(lpi, year %in% surveyyear)
covsum<- ddply(checklist, .(Vegetation.Type, pointyear), summarise, Percent.Cover=sum(Percent.Cover), .drop=F)
shrubs<-subset(covsum, subset=covsum$Vegetation.Type == "shrubs")
colnames(shrubs) = c("covertype", "pointyear", "Shrubcover")
shrubs = subset(shrubs, select = c("pointyear", "Shrubcover"))
trees<-subset(covsum, subset=covsum$Vegetation.Type == "trees")
colnames(trees) = c("covertype", "pointyear", "Treecover")
trees = subset(trees, select = c("pointyear", "Treecover"))
lpi$BG<-0
lpi$BG <- replace(lpi$BG,
lpi$Top.Layer == "NOPLANT" &
lpi$Lower1 == "" & lpi$Lower2 == "" & lpi$Lower3 == "" & lpi$Soil.Surface == "S", 1)
#Aggregate Bare Grounds By Point
BareGround<-aggregate(lpi$BG,list(lpi$pointyear),sum)
names(BareGround)<-c("pointyear", "BareGround")
#Calculate Litter
#First, rename all of the things that could be litter into just one term
lpi$Litter<-0
lpi$Litter <- replace(lpi$Litter, lpi$Lower1 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower2 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower3 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower4 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower5 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower6 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower7 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower8 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower9 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower10 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Soil.Surface == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Soil.Surface == "EM", 1)
Litter<-aggregate(lpi$Litter,list(lpi$pointyear),sum)
names(Litter)<-c("pointyear", "Litter")
lpi$Thatch<-1
lpi$Thatch<-replace(lpi$Thatch, is.na(lpi$Thatch.Indices.Lower), 0)
lpi$Thatch<-replace(lpi$Thatch, lpi$Thatch.Indices.Lower == "", 0)
lpi$Thatch<-replace(lpi$Thatch, is.na(lpi$Thatch.Top.Layer), 0)
lpi$Thatch<-replace(lpi$Thatch, lpi$Thatch.Top.Layer == "", 0)
Thatch<-aggregate(lpi$Thatch,list(lpi$pointyear),sum, na.rm = TRUE)
names(Thatch)<-c("pointyear", "Thatch")
lpi$Point.Dir<-paste(lpi$pointyear, lpi$Direction, sep="-")
layers<-subset(lpi, select=c("pointyear",  "Top.Layer", "Lower1", "Lower2",
"Lower3", "Lower4", "Lower5", "Lower6", "Lower7"))
longlpi<-melt(layers, id="pointyear")
names(longlpi)<-c("pointyear", "Layer", "Spp")
checklist$Layer<-"extras"
extras<-subset(checklist, select=c("pointyear", "Layer", "USDA.Code"))
names(extras)<-c("pointyear", "Layer", "Spp")
both<-rbind(longlpi, extras)
both$Spp<-as.factor(both$Spp)
#Remove the non-spp
Exclude<-c("", "2FA", "2FORB", "2FP", "2GA", "2GP", "2LICHN",
"2LTR", "2LTRWS",  "2PLANT",  "2W", "NOPLANT", "L", "WL")
both <- both[!(both$Spp %in% Exclude),]
both<-droplevels(both)
##add plants that are in the soil surface hit to this that##
CAPlants = RMN:::CAPlantsv2
richness<-NULL
both1 = both
both1$Layer = NULL
both1 = both1[!duplicated(both1),]
richness = both1
richness<-merge(richness, CAPlants, by.x = "Spp", by.y = "Accepted.Symbol", all.x = TRUE, all.y = FALSE)
richness2<-aggregate(richness$Spp, list(richness$pointyear), length)
names(richness2)<-c("pointyear", "NumSpp")
#### Now bring everything together
Pointyears = subset(main, select = c(pointyear, PointId, year))
data.summary = Pointyears
data.summary = merge(data.summary, richness2, by = "pointyear", all.x=TRUE)
data.summary<-merge(data.summary, Litter, by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, Thatch,by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, BareGround,by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, trees,by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, shrubs,by="pointyear", all.x=TRUE)
# IF you have transect where Not every point has all 100 subsamples,
# Then run this to correct for reduced effort
lpi$Tally<-1
indices<-aggregate(lpi$Tally, list(lpi$pointyear), sum)
names(indices)<-c("pointyear", "NumIndices")
data.summary<-merge(data.summary, indices, by="pointyear")
data.summary$Litter<-(data.summary$Litter/data.summary$NumIndices)*100
data.summary$BareGround<-(data.summary$BareGround/data.summary$NumIndices)*100
data.summary$Thatch = (data.summary$Thatch/data.summary$NumIndices)*100
#select variables you want to
if(!("SpeciesRichness" %in% choose.variable)){data.summary$NumSpp = NULL}
if(!("Litter" %in% choose.variable)){data.summary$Litter = NULL}
if(!("Thatch" %in% choose.variable)){data.summary$Thatch = NULL}
if(!("BareGround" %in% choose.variable)){data.summary$BareGround = NULL}
if(!("Trees" %in% choose.variable)){data.summary$Treecover = NULL}
if(!("Shrubs" %in% choose.variable)){data.summary$Shrubcover = NULL}
return(data.summary)
}
f = cs(lpi, checklist)
View(f)
covsum<- ddply(checklist, .(Vegetation.Type, pointyear), summarise, Percent.Cover=sum(Percent.Cover), .drop=F)
View(covsum)
View(covsum)
View(f)
cover.sum.plot(lpi, checklist)
f = cover.summary(lpi, checklist)
View(f)
library(RMN)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(reshape2)
library(ggplot2)
library(knitr)
library(plyr)
library(RMN)
library(lubridate)
library(dplyr)
# Set your working directory. This is the pathway to the file where you keep your downloaded data.
# All products get written to this as well.
# I recommend 1 folder per ranch
# Replace the filepath in quotes with your filepath
# Remember to change the backslashes ("\") to forward slashes ("/")
# Read in Veg data
# Replace the filename in quotes with whatever you named the file
name = "TOKA"
main<-read.csv("smc_main.csv") %>% add.pointyear() %>% subset(Transect.Name == name)
lpi<-read.csv("smc_lpi.csv") %>% add.pointyear() %>% subset(subset = (Soil.Surface != "" & Top.Layer != "")) %>% subset(Transect.Name == name)
checklist<-read.csv("smc_check.csv") %>% add.pointyear() %>% subset(Transect.Name == name)
# Read in the California Plants list and Invasivs.
##These are files you should have gotten from Libby.
##Bug her if you didn't
cs = function(lpi, checklist, surveyyear = c(levels(as.factor(lpi$year)), levels(as.factor(checklist$year))),
choose.variable = c("SpeciesRichness", "Litter", "Thatch",
"BareGround", "Trees", "Shrubs")){
library(reshape2)
library(ggplot2)
checklist = subset(checklist, year %in% surveyyear)
lpi = subset(lpi, year %in% surveyyear)
covsum<- ddply(checklist, .(Vegetation.Type, pointyear), summarise, Percent.Cover=sum(Percent.Cover), .drop=F)
shrubs<-subset(covsum, subset=covsum$Vegetation.Type == "shrubs")
colnames(shrubs) = c("covertype", "pointyear", "Shrubcover")
shrubs = subset(shrubs, select = c("pointyear", "Shrubcover"))
trees<-subset(covsum, subset=covsum$Vegetation.Type == "trees")
colnames(trees) = c("covertype", "pointyear", "Treecover")
trees = subset(trees, select = c("pointyear", "Treecover"))
lpi$BG<-0
lpi$BG <- replace(lpi$BG,
lpi$Top.Layer == "NOPLANT" &
lpi$Lower1 == "" & lpi$Lower2 == "" & lpi$Lower3 == "" & lpi$Soil.Surface == "S", 1)
#Aggregate Bare Grounds By Point
BareGround<-aggregate(lpi$BG,list(lpi$pointyear),sum)
names(BareGround)<-c("pointyear", "BareGround")
#Calculate Litter
#First, rename all of the things that could be litter into just one term
lpi$Litter<-0
lpi$Litter <- replace(lpi$Litter, lpi$Lower1 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower2 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower3 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower4 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower5 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower6 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower7 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower8 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower9 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Lower10 == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Soil.Surface == "L", 1)
lpi$Litter <- replace(lpi$Litter, lpi$Soil.Surface == "EM", 1)
Litter<-aggregate(lpi$Litter,list(lpi$pointyear),sum)
names(Litter)<-c("pointyear", "Litter")
lpi$Thatch<-1
lpi$Thatch<-replace(lpi$Thatch, is.na(lpi$Thatch.Indices.Lower), 0)
lpi$Thatch<-replace(lpi$Thatch, lpi$Thatch.Indices.Lower == "", 0)
lpi$Thatch<-replace(lpi$Thatch, is.na(lpi$Thatch.Top.Layer), 0)
lpi$Thatch<-replace(lpi$Thatch, lpi$Thatch.Top.Layer == "", 0)
Thatch<-aggregate(lpi$Thatch,list(lpi$pointyear),sum, na.rm = TRUE)
names(Thatch)<-c("pointyear", "Thatch")
lpi$Point.Dir<-paste(lpi$pointyear, lpi$Direction, sep="-")
layers<-subset(lpi, select=c("pointyear",  "Top.Layer", "Lower1", "Lower2",
"Lower3", "Lower4", "Lower5", "Lower6", "Lower7"))
longlpi<-melt(layers, id="pointyear")
names(longlpi)<-c("pointyear", "Layer", "Spp")
checklist$Layer<-"extras"
extras<-subset(checklist, select=c("pointyear", "Layer", "USDA.Code"))
names(extras)<-c("pointyear", "Layer", "Spp")
both<-rbind(longlpi, extras)
both$Spp<-as.factor(both$Spp)
#Remove the non-spp
Exclude<-c("", "2FA", "2FORB", "2FP", "2GA", "2GP", "2LICHN",
"2LTR", "2LTRWS",  "2PLANT",  "2W", "NOPLANT", "L", "WL")
both <- both[!(both$Spp %in% Exclude),]
both<-droplevels(both)
##add plants that are in the soil surface hit to this that##
CAPlants = RMN:::CAPlantsv2
richness<-NULL
both1 = both
both1$Layer = NULL
both1 = both1[!duplicated(both1),]
richness = both1
richness<-merge(richness, CAPlants, by.x = "Spp", by.y = "Accepted.Symbol", all.x = TRUE, all.y = FALSE)
richness2<-aggregate(richness$Spp, list(richness$pointyear), length)
names(richness2)<-c("pointyear", "NumSpp")
#### Now bring everything together
Pointyears = subset(main, select = c(pointyear, PointId, year))
data.summary = Pointyears
data.summary = merge(data.summary, richness2, by = "pointyear", all.x=TRUE)
data.summary<-merge(data.summary, Litter, by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, Thatch,by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, BareGround,by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, trees,by="pointyear", all.x=TRUE)
data.summary<-merge(data.summary, shrubs,by="pointyear", all.x=TRUE)
# IF you have transect where Not every point has all 100 subsamples,
# Then run this to correct for reduced effort
lpi$Tally<-1
indices<-aggregate(lpi$Tally, list(lpi$pointyear), sum)
names(indices)<-c("pointyear", "NumIndices")
data.summary<-merge(data.summary, indices, by="pointyear")
data.summary$Litter<-(data.summary$Litter/data.summary$NumIndices)*100
data.summary$BareGround<-(data.summary$BareGround/data.summary$NumIndices)*100
data.summary$Thatch = (data.summary$Thatch/data.summary$NumIndices)*100
#select variables you want to
if(!("SpeciesRichness" %in% choose.variable)){data.summary$NumSpp = NULL}
if(!("Litter" %in% choose.variable)){data.summary$Litter = NULL}
if(!("Thatch" %in% choose.variable)){data.summary$Thatch = NULL}
if(!("BareGround" %in% choose.variable)){data.summary$BareGround = NULL}
if(!("Trees" %in% choose.variable)){data.summary$Treecover = NULL}
if(!("Shrubs" %in% choose.variable)){data.summary$Shrubcover = NULL}
return(data.summary)
}
f = cs(lpi, checklist)
View(f)
f = cover.summary(lpi, checklist)
f = cover.sum.plot(lpi, checklist)
View(f)
f
zz = function(){}
zz = function(){}
zz = function(){return(n = 3)}
zz
zz()
n
library(RMN)
library(RMN)
library(RMN)
devtools::document()

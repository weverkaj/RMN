---
output:
  html_document: default
  pdf_document: default
  word_document: default
---

```{r echo = FALSE, message = FALSE, warning = FALSE}

##Read in the necessary libraries##
library(PairedData)
library(stringr)
library(ggrepel)
library(soiltexture)
library(reshape2)
library(gridExtra)
library(dplyr)
library(lubridate)
library(RMN)

```

```{r echo = FALSE, message = FALSE, warning = FALSE}

####################
##Load in the data##
####################

#### specify file path to data here
data = read.csv("gb_soil.csv")

#In quotes, write the code for your ranch
ranch = "SHRO"



asc = add.soilcolumns(data = data)
ss =  survey.sums(asc)
soil = soil.final.cleanup(ss)

  
```

```{r}

# pcp = function(data, transect,
#                                surveyyear = levels(as.factor(data$YEAR)),
#                                background = TRUE,
#                                legendnames = c(paste(transect, collapse = " "), "Others"),
#                                legendtitle = "Ranch",
#                                legend = TRUE,
#                                boxcolors = c("black", "gray"),
#                                xlabels = c("Carbon 0-10 cm", "Carbon 10-40 cm", "Bulk Density"),
#                                ylab = "% Change",
#                                choosevariables = c("Carbon010change", "Carbon1040change","Bulk.density.change"))
# {
# 
#   library(reshape2)
#   library(dplyr)
#   library(ggplot2)
#   library(ggrepel)
#   pc = function(x){(diff(x)/x[1]) * 100}
# 
# 
# 
# 
#   data$YEAR = as.factor(data$YEAR)
#   data = subset(data, YEAR %in% surveyyear)
#   if(!background){data = subset(data, subset = Transect %in% transect)}
#   duped = data$Point[duplicated(data$Point)]
#   data = data[data$Point %in% duped,]
#   if(!(transect %in% data$Transect)){stop("Transect does not contain multiple surveys")}
#   data$YEAR = as.factor(data$YEAR)
# 
# 
#   data2 = subset(data,select=c("Point", "Transect", "YEAR", "Carbon.0.10.cm", "Carbon.10.40.cm",
#                                "Bulk.Density"))
# 
# 
#   aggs = aggregate(data2[4:6], by = list(data2$Point), pc)
#   colnames(aggs) = c("Point", "Change.Carbon0-10", "Change.Carbon10-40", "BD")
#   data2 = subset(data2, data2$YEAR == max(levels(droplevels(data2$YEAR))))
#   data2 = merge(data2, aggs, by= "Point", all.x = T)
# 
# 
# 
# 
# 
#   masked = data2
#   masked$Transect = as.character(replace(as.character(masked$Transect),
#                                          masked$Transect != transect, values = "zzzz"))
#   masked$Transect = as.character(replace(as.character(masked$Transect),
#                                          masked$Transect == transect, values = "aaaa"))
# 
#   masked = masked %>% arrange(desc(Transect))
# 
#   colnames(masked)[7:9] = c("Carbon010change", "Carbon1040change","Bulk.density.change")
# 
#   masked = subset(masked, select = c("Point", "Transect" , choosevariables))
# 
#   masked = melt(masked, id.vars = c("Point", "Transect"))
# masked = masked[!is.na(masked$variable),]
# masked = masked[!is.nan(masked$variable),]
# 
# 
#   p = ggplot(masked, aes(x = variable, y = value, color = Transect)) +
#     geom_boxplot() +
#     scale_color_manual(values = boxcolors, labels = legendnames) +
#     guides(color = ifelse(legend, guide_legend(title = legendtitle), FALSE), label = FALSE) +
#     theme_bw() +
#     scale_x_discrete(labels = xlabels) +
#     geom_hline(yintercept = 0, linetype = 'dotted') +
#     ylab(ylab) +
#     xlab(NULL)
# 
#   return(p)
# 
# 
# }
# 
# pcp(soil, "ABER", surveyyear = as.character(2015:2018))

```



```{r echo = FALSE, message = FALSE, warning = FALSE}

data.sum(soil, transect = ranch)
texture.triangle.plot(soil, transect=ranch, year = "2018", labels = FALSE, background = FALSE)
carbon.plot(data=soil,transect = ranch, year = "2018", labels = FALSE, background = TRUE)
# percent.change.plot(data = soil, transect = ranch, background = FALSE)
compaction.plot(soil, ranch, year = "2018", labels = FALSE, pointsize = 4)



```










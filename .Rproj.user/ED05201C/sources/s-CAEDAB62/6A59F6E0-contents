---
output:
  html_document: default
  pdf_document: default
  word_document: default
---

```{r echo = FALSE, message = FALSE, warning = FALSE}

##Read in the necessary libraries##
library(PairedData)
library(stringr)
library(ggrepel)
library(soiltexture)
library(reshape2)
library(gridExtra)
library(dplyr)

```

```{r echo = FALSE, message = FALSE, warning = FALSE}


###############################################
###############################################
###SECTION 1: DATA FORMATTING##################
###############################################
###############################################


####################
##Load in the data##
####################



data = read.csv("SJVSoil.csv")



########################
#Format the date fields#
######################## 

#This is for computer that format date as  mm/dd/yyyy
data$DATE <- as.Date( as.character(data$Date), ("%Y-%m-%d"))
data$YEAR <- format(data$DATE, format = "%Y")
data$SURVEY <- as.factor(paste(data$Point.Name,"-",data$YEAR,sep=""))

######################################
#Format the bulk density measurements#
######################################
#First you might have to force the correct bulk denisty and water volume dimensions, IF CADC changed values to zeros
#Only run the next three lines if you used standard bulk density and infiltration rings.

data$Ring.Infiltrometer.Diameter<-15.2
data$Bulk.Density.Diameter<-5.2
data$Water.Volume<-450
data$Bulk.Density.Height<-7.5

#Add columns to calculate the volume of the bulk density ring and calculate the bulk density, corrected for rocks
data$Total.Volume<-pi*((data$Bulk.Density.Diameter/2)^2)*data$Bulk.Density.Height
data$Bulk.Density<-(data$Bulk.Density.Dry.Wt/(data$Total.Volume-data$Bulk.Density.Rock.Vol))

#A data cleaning step, if there is no bulk density, change zeros to NAs
data[,"Bulk.Density"][data[,"Bulk.Density"] <= 0] <- NA
```

```{r echo = FALSE, message = FALSE, warning = FALSE}
###########################
#Format Water Infiltration#
###########################

# Load the function that converts minutes to seconds
toSeconds <- function(x){
  if (!is.character(x)) stop("x must be a character string of the form H:M:S")
  if (length(x)<=0)return(x)
  
  unlist(
    lapply(x,
           function(i){
             i <- as.numeric(strsplit(i,':',fixed=TRUE)[[1]])
             if (length(i) == 3) 
               i[1]*3600 + i[2]*60 + i[3]
             else if (length(i) == 2) 
               i[1]*60 + i[2]
             else if (length(i) == 1) 
               i[1]
           }  
    )  
  )  
} 

##Turn blank water infiltration times to 0
data[,"Water.Infiltration.Time.1"][data[,as.character("Water.Infiltration.Time.1")] == ""] <- "00:00:00"
##Create a column to hold water infiltration times in seconds
data$ISec1<-NULL
##Convert water infiltration times to seconds
data$ISec1<-toSeconds(as.character(data$Water.Infiltration.Time.1))
##Convert water infiltration times to decimal minutes
data$ISec1<-data$ISec1/60
```

```{r echo = FALSE, message = FALSE, warning = FALSE}


####################################################
## Collapse data to one measurement pers location ##
####################################################
##THIS USES FIRST INFILTRATION MEASUREMENTS#########

##averaging Infiltration and Bulk Density within location
data[data == 0]<- NA
filtmean<-aggregate(data$ISec1, by=list(data$SURVEY), mean, na.rm=TRUE)
bulkmean<-aggregate(data$Bulk.Density, by=list(data$SURVEY), mean, na.rm=TRUE)
names(bulkmean)<-c("SURVEY", "Bulk.Density")
names(filtmean)<-c("SURVEY","Infilt1")

##Create a data set with just one carbon value per location##
carbon<-subset(data, select=c("Transect.Name","Point.Name","SURVEY","YEAR","Carbon.0.10.cm", "Carbon.10.40.cm","Clay.10.40.cm","Sand.10.40.cm","Silt.10.40.cm"))
names(carbon)<-c("Transect","Point","SURVEY","YEAR","Carbon.0.10.cm", "Carbon.10.40.cm","Clay.10.40.cm","Sand.10.40.cm","Silt.10.40.cm")
carbon<-unique(carbon)

##Merge water infiltration, bulkdensity, and carbon together##
newdata<-merge(filtmean, bulkmean, by="SURVEY")
newdata<-merge(newdata, carbon, by="SURVEY")

#######################################################
#####   BUILD COLUMNS FOR EACH YEAR   #################
#######################################################
Data_2015<-subset(newdata,newdata$YEAR==2015|newdata$YEAR==2014,select=c("Transect","Point","Carbon.0.10.cm","Carbon.10.40.cm","Bulk.Density","Infilt1", "Clay.10.40.cm","Sand.10.40.cm","Silt.10.40.cm"))
names(Data_2015)<-c("Transect","Point","Carbon.0.10.2015","Carbon.10.40.2015","Bulk.Density.2015","Infilt1.2015","Clay.10.40.cm.2015","Sand.10.40.cm.2015","Silt.10.40.cm.2015")

Data_2018<-subset(newdata,newdata$YEAR==2018|newdata$YEAR==2017,select=c("Point","Carbon.0.10.cm","Carbon.10.40.cm","Bulk.Density","Infilt1","Clay.10.40.cm","Sand.10.40.cm","Silt.10.40.cm"))
names(Data_2018)<-c("Point","Carbon.0.10.2018","Carbon.10.40.2018","Bulk.Density.2018","Infilt1.2018","Clay.10.40.cm.2018","Sand.10.40.cm.2018","Silt.10.40.cm.2018")

Paired_data<-merge(Data_2015,Data_2018,by="Point")

##Create a column for Location only by breaking the Point number out of Point code##
#Paired_data$Location<-str_sub(Paired_data$Point, -2)
```

```{r echo = FALSE, message = FALSE, warning = FALSE}


################################################################
##MANIPULATING THE FINAL DATA INTO DIFFERENT METRICS OF CHANGE##
################################################################

#Calculate % change in carbon, bulk density, and water infiltration#
Paired_data$carbon.0.10.per_delta<-((Paired_data$Carbon.0.10.2018-Paired_data$Carbon.0.10.2015)/Paired_data$Carbon.0.10.2015)*100
Paired_data$carbon.10.40.per_delta<-((Paired_data$Carbon.10.40.2018-Paired_data$Carbon.10.40.2015)/Paired_data$Carbon.10.40.2015)*100
Paired_data$Bulk.Density.per_delta<-((Paired_data$Bulk.Density.2018-Paired_data$Bulk.Density.2015)/Paired_data$Bulk.Density.2015)*100
Paired_data$Infilt.per_delta<-((Paired_data$Infilt1.2018-Paired_data$Infilt1.2015)/Paired_data$Infilt1.2015)*100

##QUICK PLOTS TO MAKE SURE IT ALL WORKS##
with(Paired_data,plot(paired(Carbon.0.10.2015,Carbon.0.10.2018),groups=Transect,facet=FALSE))
with(Paired_data,plot(paired(Carbon.10.40.2015,Carbon.10.40.2018),groups=Transect,facet=FALSE))
paired.plotMcNeil(Paired_data,"Carbon.0.10.2015","Carbon.0.10.2018",subjects="Point")
paired.plotMcNeil(Paired_data,"Carbon.10.40.2015","Carbon.10.40.2018",subjects="Point")
paired.plotMcNeil(Paired_data,"Bulk.Density.2015","Bulk.Density.2018",subjects="Point")
paired.plotMcNeil(Paired_data,"Infilt1.2015","Infilt1.2018",subjects="Point")


TD1<-aggregate(Paired_data$carbon.0.10.per_delta, list(Paired_data$Transect), mean)
names(TD1)<-c("Transect", "MeanC1")
TD2<-aggregate(Paired_data$carbon.10.40.per_delta, list(Paired_data$Transect), mean)
names(TD2)<-c("Transect", "MeanC2")

```

```{r echo = FALSE, message = FALSE, warning = FALSE}

###############################################################
####CREATE A COMPREHENSIVE DATA SET FOR OVERALL COMPARISONS####
###############################################################

##subset to a simplified data set##
soil<-subset(Paired_data,select=c("Point","Transect","Carbon.0.10.2018", "Carbon.10.40.2018","Bulk.Density.2018","Infilt1.2018","Clay.10.40.cm.2018", "Sand.10.40.cm.2018", "Silt.10.40.cm.2018","carbon.0.10.per_delta","carbon.10.40.per_delta","Infilt.per_delta","Bulk.Density.per_delta"))
names(soil)<-c("Point","Transect","Carbon.0.10.2018","Carbon.10.40.2018","Bulk.Density.2018","Infilt1.2018","Clay.10.40.cm.2018", "Sand.10.40.cm.2018", "Silt.10.40.cm.2018","Carbon010change","Carbon1040change","Infiltration.change","Bulk.density.change")
soil$Location<-str_sub(soil$Point, -2)
soil$CLAY<-soil$Clay.10.40.cm.2018
soil$SILT<-soil$Silt.10.40.cm.2018
soil$SAND<-soil$Sand.10.40.cm.2018
```

```{r echo = FALSE, message = FALSE, warning = FALSE}

##############################################################
#########   Add Texture Data and Scores  #####################
##############################################################

soil$Texture<- TT.points.in.classes(
  tri.data    = soil,
  class.sys   = "USDA.TT",
  PiC.type    = "t", text.tol=1)

#add new column qualifying soil texture as coarse or fine based on this characterization of the soil texture triangle:
#https://cpb-us-e1.wpmucdn.com/blogs.cornell.edu/dist/f/5772/files/2016/12/04_CASH_SH_Series_Texture_Fact_Sheet_072717-286kw9f.pdf
#https://www.nrcs.usda.gov/Internet/FSE_DOCUMENTS/nrcs142p2_053260.pdf  

soil$TextCategory = ifelse(soil$CLAY > 25, "Fine", ifelse(soil$CLAY < 15 & soil$SAND > 80, "Coarse","Coarse"))

#add bulk density targets
soil$BD_target<-replace(soil$BD_target,soil$TextCategory=="Fine",1.1)
soil$BD_target<-replace(soil$BD_target,soil$TextCategory=="Coarse",1.4)

#Water infiltration versus target of 10 - this is NRCS target, converted for the time 1 measurement
soil$Infilt_target<-3.81
soil$Infilt_dist<-soil$Infilt_target-soil$Infilt1.2018
soil$BD_dist<-soil$BD_target-soil$Bulk.Density.2018

#add a location field
soil$Location<-str_sub(soil$Point, -2)

```

```{r echo = FALSE, message = FALSE, warning = FALSE}

##################################################
###SECTION 2: FUNCTIONS THAT CREATE THE FIGURES###
##################################################


#######################################################
##SUMMARY OF DATA######################################
#######################################################

data_sum<-function(data,transect){
  #data<-soil
  #transect="BOPO"
  data1<-subset(data,data$Transect==transect)
  data2<-subset(data1,select=c("Point","Carbon.0.10.2018", "Carbon.10.40.2018", "Bulk.Density.2018", "Infilt1.2018","Carbon010change","Carbon1040change","Bulk.density.change"))
  names(data2) = c("Point","Carbon\n2018\n0-10cm", "Carbon\n2018\n10-40cm", "Bulk\nDensity\n2018", "Infiltration\n2018","Carbon\nChange\n0-10cm","Carbon\nChange\n10-40cm","Bulk\nDensity\nchange")
  data2[,2:8] = round(data2[,2:8], 2)
  grid.table(data2,theme= ttheme_default(base_size=10))
}

#data_sum(soil,"TCUP")
```

```{r echo = FALSE, message = FALSE, warning = FALSE}


#######################################################
###GENERATE PLOTS THAT COMPARE 1 RANCH TO ALL OTHERS###
#######################################################


texture_triangle_plot<-function(data,transect){
  
  data1<-subset(data,data$Transect==transect)
  data2<-subset(data,data$Transect!=transect)
  
  
  ##texture plot##
  
  test<-TT.plot(
    class.sys = "USDA.TT",    ## with the UDSA texture classes
    tri.data = data2,
    pch=16,
    main = paste("Soil Texture - ",transect),
    cex.axis = 0.5,
    cex.lab = 0.75,
    cex.main = 0.75,
    text.tol=0.2,
    tri.sum.tst=FALSE,
    col="gray",
    cex=0.75,
    frame.bg.col="white",
    grid.show=FALSE
  )
  
  TT.points(geo=test,
            tri.data = data1,
            pch=16,
            tri.sum.tst=FALSE,
            col="black",
            cex=0.75,
  )
  
  TT.text(
    tri.data = data1,
    geo = test,
    tri.sum.tst=FALSE,
    labels = data1$Location,
    pos=c(1,3,2),
    offset=0.2,
    font = 0.1,
    cex = 0.75, 
    col= "black")
}

#texture_triangle_plot(data=soil,transect="TCUP")

```

```{r echo = FALSE, message = FALSE, warning = FALSE}

###############
##Carbon plot##
###############

carbon_plot<-function(data,transect){
  
  data1<-subset(data,data$Transect==transect)
  data2<-subset(data,data$Transect!=transect)
  
  plot(data$Carbon.10.40.2018,data$Carbon.0.10.2018,cex=0,
       ylab="% organic carbon 0-10 cm",xlab="% organic carbon 10-40 cm",main=paste("Soil carbon - ",transect))
  
  points(data2$Carbon.10.40.2018,data2$Carbon.0.10.2018,pch=16,col="gray")
  points(data1$Carbon.10.40.2018,data1$Carbon.0.10.2018,pch=16,col="black")
  
  identify(data1$Carbon.10.40.2018,data1$Carbon.0.10.2018,labels=data1$Location, cex=0.75, at.pen=TRUE)
}

#carbon_plot(data=soil,transect="TCUP")
```

```{r echo = FALSE, message = FALSE, warning = FALSE}



################################
##Compaction/Infiltration Plot##
################################

compaction_plot<-function(data,transect){
  
  data1<-subset(data,data$Transect==transect)
  data2<-subset(data,data$Transect!=transect)
  
  plot(data$BD_dist,data$Infilt_dist,col=soil$Color,cex=0,pch=16,
       ylab="Infiltration, distance from target",
       xlab="Bulk density, distance from target",main=paste("Compaction - ",transect)
  )
  
  points(data2$BD_dist,data2$Infilt_dist,pch=16,col="gray")
  points(data1$BD_dist,data1$Infilt_dist,pch=16,col="black")
  
  
  abline(v=0,lty="dashed")
  abline(h=0,lty="dashed")
  identify(data1$BD_dist,data1$Infilt_dist,labels=data1$Location, cex=0.75, at.pen=TRUE)
}

#compaction_plot(data=soil,transect="TCUP")
```

```{r echo = FALSE, message = FALSE, warning = FALSE}


#################################
###Percent Change plots##########
#################################


percent_change_plot<-function(data,transect){
  
  data1<-subset(data,data$Transect==transect)
  data2<-subset(data,data$Transect!=transect)
  
  
  data$Comp<-"all other"
  data$Comp<-replace(data$Comp,data$Transect==transect,transect)
  data$Color<-"gray"
  data$Color<-replace(data$Color,data$Transect==transect,"black")
  
  soil_sub<-subset(data,select=c("Location","Comp","Color","Carbon010change", "Carbon1040change","Bulk.density.change"))
  soil_sub2<-melt(soil_sub)
  
  boxplot(value~Comp + variable, data = soil_sub2,
          col=c("gray","white"),
          at = c(1, 1.8, 4, 4.8, 7,7.8),
          ylab="% change",
          xaxt="n",
          main=paste("% Change 2015-2018 - ",transect),
          range=0)
  
  axis(side=1, at=c(1.45,4.45,7.45), labels=c('0-10 cm carbon', '10-40 cm carbon','bulk density'), line=0.5, lwd=0,cex.axis=0.8, las = 1)
  abline(h=0)
  legend("bottomright", legend = c(transect, "Regional Average"), fill = c("gray", "white"))
  
  points(rep(1.8,length(data1$Carbon010change)), data1$Carbon010change,pch=16,col="black")
  identify(rep(1.8,length(data1$Carbon010change)), data1$Carbon010change, labels=data1$Location,cex=.75,at.pen=TRUE)
  
  points(rep(4.8,length(data1$Carbon1040change)), data1$Carbon1040change,pch=16,col="black")
  identify(rep(4.8,length(data1$Carbon1040change)), data1$Carbon1040change, labels=data1$Location,cex=.75,at.pen=TRUE)
  
  points(rep(7.8,length(data1$Bulk.density.change)), data1$Bulk.density.change,pch=16,col="black")
  identify(rep(7.8,length(data1$Bulk.density.change)), data1$Bulk.density.change, labels=data1$Location,cex=.75,at.pen=TRUE)
  
  #points(rep(1,length(data2$Carbon010change)), data2$Carbon010change,pch=16,col="gray")
  #points(rep(4,length(data2$Carbon1040change)), data2$Carbon1040change,pch=16,col="gray")
  #points(rep(7,length(data2$Bulk.density.change)), data2$Bulk.density.change,pch=16,col="gray")
  
  boxplot(value~Comp + variable, data = soil_sub2,
          col=NA,
          at = c(1, 1.8, 4, 4.8, 7,7.8),
          ylab="% change",
          xaxt="n",
          main=paste("% Change 2015-2018 - ",transect),
          range=0,add=TRUE)
  
  
}


#percent_change_plot(soil,"TCUP")

```

```{r echo = FALSE, message = FALSE, warning = FALSE}


####################################################
####################################################
###SECTION 3: RUN THE FUNCTIONS FOR EACH PROPERTY###
####################################################
####################################################
#SANR, SFWO, DIVR
###############################################
##SOMETHING ISN"T WORKING WITH THE LABELING!!##
###############################################
# 
# #SANR POINT PLOTS
# data_sum(soil,"SANR")
# texture_triangle_plot(data=soil,transect="SANR")
# carbon_plot(data=soil,transect="SANR")
# compaction_plot(data=soil,transect="SANR")
# percent_change_plot(soil,"SANR")
```



```{r echo = FALSE, message = FALSE, warning = FALSE}
# #SFWO POINT PLOTS
# data_sum(soil,"SFWO")
# texture_triangle_plot(data=soil,transect="SFWO")
# carbon_plot(data=soil,transect="SFWO")
# compaction_plot(data=soil,transect="SFWO")
# percent_change_plot(soil,"SFWO")
# ```

# #SFWO POINT PLOTS
# data_sum(soil,"SFWO")
# texture_triangle_plot(data=soil,transect="SFWO")
# carbon_plot(data=soil,transect="SFWO")
# compaction_plot(data=soil,transect="SFWO")
# percent_change_plot(soil,"SFWO")
# # 
# ```{r echo = FALSE, message = FALSE, warning = FALSE}
# 
# 
# #Divide Ranch POINT PLOTS
# data_sum(soil,"DIVR")
# texture_triangle_plot(data=soil,transect="DIVR")
# carbon_plot(data=soil,transect="DIVR")
# compaction_plot(data=soil,transect="DIVR")
# percent_change_plot(soil,"DIVR")
# 
# ```
# ```{r echo = FALSE, message = FALSE, warning = FALSE}
# data_sum(soil,"TCUP")
# texture_triangle_plot(data=soil,transect="TCUP")
# carbon_plot(data=soil,transect="TCUP")
# compaction_plot(data=soil,transect="TCUP")
# percent_change_plot(soil,"TCUP")
```



```{r echo = FALSE, message = FALSE, warning = FALSE}
# #Cloverdale POINT PLOTS
# data_sum(soil,"CLOV")
# texture_triangle_plot(data=soil,transect="CLOV")
# carbon_plot(data=soil,transect="CLOV")
# compaction_plot(data=soil,transect="CLOV")
# percent_change_plot(soil,"CLOV")

# 
# #PONU POINT PLOTS
# data_sum(soil,"PONU")
# texture_triangle_plot(data=soil,transect="PONU")
# carbon_plot(data=soil,transect="PONU")
# compaction_plot(data=soil,transect="PONU")
# percent_change_plot(soil,"PONU")
# 
# #TOKA POINT PLOTS
# data_sum(soil,"TOKA")
# texture_triangle_plot(data=soil,transect="TOKA")
# carbon_plot(data=soil,transect="TOKA")
# compaction_plot(data=soil,transect="TOKA")
# percent_change_plot(soil,"TOKA")
# 
# #TOTO POINT PLOTS
# data_sum(soil,"TOTO")
# texture_triangle_plot(data=soil,transect="TOTO")
# carbon_plot(data=soil,transect="TOTO")
# compaction_plot(data=soil,transect="TOTO")
# percent_change_plot(soil,"TOTO")

soil$Transect = replace(as.character(soil$Transect), grep("3B", soil$Transect), "3BAR")

data_sum(soil, transect = "3BAR")
texture_triangle_plot(data=soil,transect="3BAR")
carbon_plot(data=soil,transect = "3BAR")
compaction_plot(data=soil,transect="3BAR")
percent_change_plot(soil,"3BAR")


```
